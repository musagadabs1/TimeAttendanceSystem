//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TimeAttendanceSystem.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PayrollEntities : DbContext
    {
        public PayrollEntities()
            : base("name=PayrollEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AREA> AREAs { get; set; }
        public virtual DbSet<EmployerDetail> EmployerDetails { get; set; }
        public virtual DbSet<GetSplitMonth> GetSplitMonths { get; set; }
        public virtual DbSet<HR_Attendance_Transaction> HR_Attendance_Transaction { get; set; }
        public virtual DbSet<HR_AVAIL_SCHEDULE> HR_AVAIL_SCHEDULE { get; set; }
        public virtual DbSet<HR_COUNTRY> HR_COUNTRY { get; set; }
        public virtual DbSet<HR_DAYS_WORKED> HR_DAYS_WORKED { get; set; }
        public virtual DbSet<HR_DEPARTMENT> HR_DEPARTMENT { get; set; }
        public virtual DbSet<HR_GENDER> HR_GENDER { get; set; }
        public virtual DbSet<HR_GRADE_CATEGORY> HR_GRADE_CATEGORY { get; set; }
        public virtual DbSet<HR_Grade_Detail> HR_Grade_Detail { get; set; }
        public virtual DbSet<HR_PERSON> HR_PERSON { get; set; }
        public virtual DbSet<HR_POSITION> HR_POSITION { get; set; }
        public virtual DbSet<HR_SHIFT> HR_SHIFT { get; set; }
        public virtual DbSet<tbl_Shiftcontract> tbl_Shiftcontract { get; set; }
        public virtual DbSet<tbl_StaffLoanORSalaryAdvance> tbl_StaffLoanORSalaryAdvance { get; set; }
        public virtual DbSet<tblContact> tblContacts { get; set; }
        public virtual DbSet<tblEmployeeType> tblEmployeeTypes { get; set; }
        public virtual DbSet<tblEmpStatu> tblEmpStatus { get; set; }
        public virtual DbSet<tblPerson> tblPersons { get; set; }
        public virtual DbSet<tblTime> tblTimes { get; set; }
        public virtual DbSet<tblWeekendPaymentMaSter> tblWeekendPaymentMaSters { get; set; }
        public virtual DbSet<tblWeekendSchedule> tblWeekendSchedules { get; set; }
        public virtual DbSet<tblWeekendScheduleApproval> tblWeekendScheduleApprovals { get; set; }
        public virtual DbSet<tblWorking_sch_DaySetup> tblWorking_sch_DaySetup { get; set; }
        public virtual DbSet<tblWorkLog> tblWorkLogs { get; set; }
        public virtual DbSet<tblWorkLogBatchDtl> tblWorkLogBatchDtls { get; set; }
        public virtual DbSet<tblWorkLogDtl> tblWorkLogDtls { get; set; }
        public virtual DbSet<YearMaster> YearMasters { get; set; }
        public virtual DbSet<attendance_finalize_department> attendance_finalize_department { get; set; }
        public virtual DbSet<attendance_log_department> attendance_log_department { get; set; }
        public virtual DbSet<AttendanceInOut> AttendanceInOuts { get; set; }
        public virtual DbSet<EvntCal> EvntCals { get; set; }
        public virtual DbSet<HR_ATTENDANCE> HR_ATTENDANCE { get; set; }
        public virtual DbSet<HR_TITLE> HR_TITLE { get; set; }
        public virtual DbSet<tblWeekendSchedule_log> tblWeekendSchedule_log { get; set; }
        public virtual DbSet<tblWorkLog_20180915> tblWorkLog_20180915 { get; set; }
        public virtual DbSet<tblWorklog_Shift> tblWorklog_Shift { get; set; }
        public virtual DbSet<tblWorkLogDtl_20180915> tblWorkLogDtl_20180915 { get; set; }
        public virtual DbSet<EMPMASTER> EMPMASTERs { get; set; }
        public virtual DbSet<View_Employee> View_Employee { get; set; }
        public virtual DbSet<ViewPerson> ViewPersons { get; set; }
        public virtual DbSet<Vw_Employee_Details> Vw_Employee_Details { get; set; }
    
        public virtual int compile(string vDate)
        {
            var vDateParameter = vDate != null ?
                new ObjectParameter("vDate", vDate) :
                new ObjectParameter("vDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("compile", vDateParameter);
        }
    
        public virtual int get_Attendance(Nullable<int> iPayrollId, Nullable<int> iDept)
        {
            var iPayrollIdParameter = iPayrollId.HasValue ?
                new ObjectParameter("iPayrollId", iPayrollId) :
                new ObjectParameter("iPayrollId", typeof(int));
    
            var iDeptParameter = iDept.HasValue ?
                new ObjectParameter("iDept", iDept) :
                new ObjectParameter("iDept", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("get_Attendance", iPayrollIdParameter, iDeptParameter);
        }
    
        public virtual int getAbsentees(Nullable<System.DateTime> iVdate, string iVdate2, string iSection)
        {
            var iVdateParameter = iVdate.HasValue ?
                new ObjectParameter("iVdate", iVdate) :
                new ObjectParameter("iVdate", typeof(System.DateTime));
    
            var iVdate2Parameter = iVdate2 != null ?
                new ObjectParameter("iVdate2", iVdate2) :
                new ObjectParameter("iVdate2", typeof(string));
    
            var iSectionParameter = iSection != null ?
                new ObjectParameter("iSection", iSection) :
                new ObjectParameter("iSection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("getAbsentees", iVdateParameter, iVdate2Parameter, iSectionParameter);
        }
    
        public virtual ObjectResult<sp_Absentiesacademics_Result> sp_Absentiesacademics(string vDate, string vEdate, Nullable<int> deptno, string weekend)
        {
            var vDateParameter = vDate != null ?
                new ObjectParameter("vDate", vDate) :
                new ObjectParameter("vDate", typeof(string));
    
            var vEdateParameter = vEdate != null ?
                new ObjectParameter("vEdate", vEdate) :
                new ObjectParameter("vEdate", typeof(string));
    
            var deptnoParameter = deptno.HasValue ?
                new ObjectParameter("deptno", deptno) :
                new ObjectParameter("deptno", typeof(int));
    
            var weekendParameter = weekend != null ?
                new ObjectParameter("Weekend", weekend) :
                new ObjectParameter("Weekend", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Absentiesacademics_Result>("sp_Absentiesacademics", vDateParameter, vEdateParameter, deptnoParameter, weekendParameter);
        }
    
        public virtual ObjectResult<sp_Absentiesacademics_Backup_Result> sp_Absentiesacademics_Backup(string vDate, string vEdate, Nullable<int> deptno, string weekend)
        {
            var vDateParameter = vDate != null ?
                new ObjectParameter("vDate", vDate) :
                new ObjectParameter("vDate", typeof(string));
    
            var vEdateParameter = vEdate != null ?
                new ObjectParameter("vEdate", vEdate) :
                new ObjectParameter("vEdate", typeof(string));
    
            var deptnoParameter = deptno.HasValue ?
                new ObjectParameter("deptno", deptno) :
                new ObjectParameter("deptno", typeof(int));
    
            var weekendParameter = weekend != null ?
                new ObjectParameter("Weekend", weekend) :
                new ObjectParameter("Weekend", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Absentiesacademics_Backup_Result>("sp_Absentiesacademics_Backup", vDateParameter, vEdateParameter, deptnoParameter, weekendParameter);
        }
    
        public virtual int sp_Absentiesacademics_New(string vDate, string vEdate, Nullable<int> deptno, string weekend)
        {
            var vDateParameter = vDate != null ?
                new ObjectParameter("vDate", vDate) :
                new ObjectParameter("vDate", typeof(string));
    
            var vEdateParameter = vEdate != null ?
                new ObjectParameter("vEdate", vEdate) :
                new ObjectParameter("vEdate", typeof(string));
    
            var deptnoParameter = deptno.HasValue ?
                new ObjectParameter("deptno", deptno) :
                new ObjectParameter("deptno", typeof(int));
    
            var weekendParameter = weekend != null ?
                new ObjectParameter("Weekend", weekend) :
                new ObjectParameter("Weekend", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Absentiesacademics_New", vDateParameter, vEdateParameter, deptnoParameter, weekendParameter);
        }
    
        public virtual ObjectResult<sp_AbsentiesacademicsPT001_Result> sp_AbsentiesacademicsPT001(string vDate, string vEdate, Nullable<int> deptno, string weekend)
        {
            var vDateParameter = vDate != null ?
                new ObjectParameter("vDate", vDate) :
                new ObjectParameter("vDate", typeof(string));
    
            var vEdateParameter = vEdate != null ?
                new ObjectParameter("vEdate", vEdate) :
                new ObjectParameter("vEdate", typeof(string));
    
            var deptnoParameter = deptno.HasValue ?
                new ObjectParameter("deptno", deptno) :
                new ObjectParameter("deptno", typeof(int));
    
            var weekendParameter = weekend != null ?
                new ObjectParameter("Weekend", weekend) :
                new ObjectParameter("Weekend", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_AbsentiesacademicsPT001_Result>("sp_AbsentiesacademicsPT001", vDateParameter, vEdateParameter, deptnoParameter, weekendParameter);
        }
    
        public virtual ObjectResult<sp_AbsentiesNONacademics_Result> sp_AbsentiesNONacademics(string vDate, string vEdate, Nullable<int> deptno, string weekend)
        {
            var vDateParameter = vDate != null ?
                new ObjectParameter("vDate", vDate) :
                new ObjectParameter("vDate", typeof(string));
    
            var vEdateParameter = vEdate != null ?
                new ObjectParameter("vEdate", vEdate) :
                new ObjectParameter("vEdate", typeof(string));
    
            var deptnoParameter = deptno.HasValue ?
                new ObjectParameter("deptno", deptno) :
                new ObjectParameter("deptno", typeof(int));
    
            var weekendParameter = weekend != null ?
                new ObjectParameter("Weekend", weekend) :
                new ObjectParameter("Weekend", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_AbsentiesNONacademics_Result>("sp_AbsentiesNONacademics", vDateParameter, vEdateParameter, deptnoParameter, weekendParameter);
        }
    
        public virtual int sp_AbsentiesNONacademics_New(string vDate, string vEdate, Nullable<int> deptno, string weekend)
        {
            var vDateParameter = vDate != null ?
                new ObjectParameter("vDate", vDate) :
                new ObjectParameter("vDate", typeof(string));
    
            var vEdateParameter = vEdate != null ?
                new ObjectParameter("vEdate", vEdate) :
                new ObjectParameter("vEdate", typeof(string));
    
            var deptnoParameter = deptno.HasValue ?
                new ObjectParameter("deptno", deptno) :
                new ObjectParameter("deptno", typeof(int));
    
            var weekendParameter = weekend != null ?
                new ObjectParameter("Weekend", weekend) :
                new ObjectParameter("Weekend", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AbsentiesNONacademics_New", vDateParameter, vEdateParameter, deptnoParameter, weekendParameter);
        }
    
        public virtual ObjectResult<sp_AbsentiesTraniee_Result> sp_AbsentiesTraniee(string vDate, string vEdate, Nullable<int> deptno, string weekend)
        {
            var vDateParameter = vDate != null ?
                new ObjectParameter("vDate", vDate) :
                new ObjectParameter("vDate", typeof(string));
    
            var vEdateParameter = vEdate != null ?
                new ObjectParameter("vEdate", vEdate) :
                new ObjectParameter("vEdate", typeof(string));
    
            var deptnoParameter = deptno.HasValue ?
                new ObjectParameter("deptno", deptno) :
                new ObjectParameter("deptno", typeof(int));
    
            var weekendParameter = weekend != null ?
                new ObjectParameter("Weekend", weekend) :
                new ObjectParameter("Weekend", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_AbsentiesTraniee_Result>("sp_AbsentiesTraniee", vDateParameter, vEdateParameter, deptnoParameter, weekendParameter);
        }
    
        public virtual int SP_Attendance()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Attendance");
        }
    
        public virtual ObjectResult<SP_DailyInAndOut_New_Result> SP_DailyInAndOut_New(string date, string dateTo)
        {
            var dateParameter = date != null ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(string));
    
            var dateToParameter = dateTo != null ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DailyInAndOut_New_Result>("SP_DailyInAndOut_New", dateParameter, dateToParameter);
        }
    
        public virtual ObjectResult<SP_DAILYINOUT_SHIFTWISE_Result> SP_DAILYINOUT_SHIFTWISE(string date)
        {
            var dateParameter = date != null ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DAILYINOUT_SHIFTWISE_Result>("SP_DAILYINOUT_SHIFTWISE", dateParameter);
        }
    
        public virtual ObjectResult<SP_DAILYINOUT_SHIFTWISE1_Result> SP_DAILYINOUT_SHIFTWISE1(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> eMPID, string type)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var eMPIDParameter = eMPID.HasValue ?
                new ObjectParameter("EMPID", eMPID) :
                new ObjectParameter("EMPID", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DAILYINOUT_SHIFTWISE1_Result>("SP_DAILYINOUT_SHIFTWISE1", startDateParameter, endDateParameter, eMPIDParameter, typeParameter);
        }
    
        public virtual int SP_Department(string deptName, Nullable<int> reportingDept, Nullable<int> mainDept, Nullable<int> orgID, Nullable<int> createdBY, string operation, Nullable<int> iD)
        {
            var deptNameParameter = deptName != null ?
                new ObjectParameter("DeptName", deptName) :
                new ObjectParameter("DeptName", typeof(string));
    
            var reportingDeptParameter = reportingDept.HasValue ?
                new ObjectParameter("ReportingDept", reportingDept) :
                new ObjectParameter("ReportingDept", typeof(int));
    
            var mainDeptParameter = mainDept.HasValue ?
                new ObjectParameter("MainDept", mainDept) :
                new ObjectParameter("MainDept", typeof(int));
    
            var orgIDParameter = orgID.HasValue ?
                new ObjectParameter("OrgID", orgID) :
                new ObjectParameter("OrgID", typeof(int));
    
            var createdBYParameter = createdBY.HasValue ?
                new ObjectParameter("CreatedBY", createdBY) :
                new ObjectParameter("CreatedBY", typeof(int));
    
            var operationParameter = operation != null ?
                new ObjectParameter("Operation", operation) :
                new ObjectParameter("Operation", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Department", deptNameParameter, reportingDeptParameter, mainDeptParameter, orgIDParameter, createdBYParameter, operationParameter, iDParameter);
        }
    
        public virtual ObjectResult<sp_designationsummary_Result> sp_designationsummary()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_designationsummary_Result>("sp_designationsummary");
        }
    
        public virtual int sp_EMployeeShiftdetails(Nullable<int> empnumber, Nullable<int> type)
        {
            var empnumberParameter = empnumber.HasValue ?
                new ObjectParameter("empnumber", empnumber) :
                new ObjectParameter("empnumber", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EMployeeShiftdetails", empnumberParameter, typeParameter);
        }
    
        public virtual int SP_GENERATE_WORKLOG(Nullable<int> l_UID)
        {
            var l_UIDParameter = l_UID.HasValue ?
                new ObjectParameter("L_UID", l_UID) :
                new ObjectParameter("L_UID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GENERATE_WORKLOG", l_UIDParameter);
        }
    
        public virtual ObjectResult<SP_GENERATE_WORKLOG001_Result> SP_GENERATE_WORKLOG001(Nullable<int> l_UID)
        {
            var l_UIDParameter = l_UID.HasValue ?
                new ObjectParameter("L_UID", l_UID) :
                new ObjectParameter("L_UID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GENERATE_WORKLOG001_Result>("SP_GENERATE_WORKLOG001", l_UIDParameter);
        }
    
        public virtual ObjectResult<SP_GENERATE_WORKLOG002_Result> SP_GENERATE_WORKLOG002(Nullable<int> l_UID)
        {
            var l_UIDParameter = l_UID.HasValue ?
                new ObjectParameter("L_UID", l_UID) :
                new ObjectParameter("L_UID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GENERATE_WORKLOG002_Result>("SP_GENERATE_WORKLOG002", l_UIDParameter);
        }
    
        public virtual ObjectResult<SP_GENERATE_WORKLOGbackup_Result> SP_GENERATE_WORKLOGbackup(Nullable<int> l_UID)
        {
            var l_UIDParameter = l_UID.HasValue ?
                new ObjectParameter("L_UID", l_UID) :
                new ObjectParameter("L_UID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GENERATE_WORKLOGbackup_Result>("SP_GENERATE_WORKLOGbackup", l_UIDParameter);
        }
    
        public virtual ObjectResult<sp_get_Shift_Result> sp_get_Shift()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_Shift_Result>("sp_get_Shift");
        }
    
        public virtual ObjectResult<sp_GetAllEmployee_Result> sp_GetAllEmployee(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetAllEmployee_Result>("sp_GetAllEmployee", iDParameter);
        }
    
        public virtual ObjectResult<SP_GETDESIGNATION_Result> SP_GETDESIGNATION()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GETDESIGNATION_Result>("SP_GETDESIGNATION");
        }
    
        public virtual int SP_Late_Attendance_Mail()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Late_Attendance_Mail");
        }
    
        public virtual int SP_LateAttendance(Nullable<int> year, string month, string type, Nullable<int> eDOWNLOAD)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var eDOWNLOADParameter = eDOWNLOAD.HasValue ?
                new ObjectParameter("EDOWNLOAD", eDOWNLOAD) :
                new ObjectParameter("EDOWNLOAD", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_LateAttendance", yearParameter, monthParameter, typeParameter, eDOWNLOADParameter);
        }
    
        public virtual int SP_LateAttendance_Monthly()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_LateAttendance_Monthly");
        }
    
        public virtual int SP_LateAttendance_ThanScheduleTime(Nullable<int> year, string month, string type, Nullable<int> eDOWNLOAD)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var eDOWNLOADParameter = eDOWNLOAD.HasValue ?
                new ObjectParameter("EDOWNLOAD", eDOWNLOAD) :
                new ObjectParameter("EDOWNLOAD", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_LateAttendance_ThanScheduleTime", yearParameter, monthParameter, typeParameter, eDOWNLOADParameter);
        }
    
        public virtual int SP_LateAttendance_Weekly()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_LateAttendance_Weekly");
        }
    
        public virtual int SP_LateComingANDEarlyGoing(string fromDate, string toDate)
        {
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_LateComingANDEarlyGoing", fromDateParameter, toDateParameter);
        }
    
        public virtual int SP_MonthwiseWeeklyDetails(string month, string year, string type)
        {
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_MonthwiseWeeklyDetails", monthParameter, yearParameter, typeParameter);
        }
    
        public virtual ObjectResult<SP_PopulateEmpShiftDtl_Result> SP_PopulateEmpShiftDtl(Nullable<int> empNumber)
        {
            var empNumberParameter = empNumber.HasValue ?
                new ObjectParameter("EmpNumber", empNumber) :
                new ObjectParameter("EmpNumber", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PopulateEmpShiftDtl_Result>("SP_PopulateEmpShiftDtl", empNumberParameter);
        }
    
        public virtual ObjectResult<sp_rpt_NOHRS_WORKED_WeeklyInMonth_Result> sp_rpt_NOHRS_WORKED_WeeklyInMonth(Nullable<System.DateTime> monthandYear, string type)
        {
            var monthandYearParameter = monthandYear.HasValue ?
                new ObjectParameter("MonthandYear", monthandYear) :
                new ObjectParameter("MonthandYear", typeof(System.DateTime));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_rpt_NOHRS_WORKED_WeeklyInMonth_Result>("sp_rpt_NOHRS_WORKED_WeeklyInMonth", monthandYearParameter, typeParameter);
        }
    
        public virtual int sp_rpt_NOHRS_WORKED_WeeklyInMonth_Details(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string type)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_rpt_NOHRS_WORKED_WeeklyInMonth_Details", fromDateParameter, toDateParameter, typeParameter);
        }
    
        public virtual int Sp_TAS_EmployeeMaster(Nullable<int> machineCode, string firstName, string middleName, string lastName, Nullable<int> company, string etype, string active, Nullable<int> department, Nullable<int> designation, string operation)
        {
            var machineCodeParameter = machineCode.HasValue ?
                new ObjectParameter("MachineCode", machineCode) :
                new ObjectParameter("MachineCode", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var middleNameParameter = middleName != null ?
                new ObjectParameter("MiddleName", middleName) :
                new ObjectParameter("MiddleName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var companyParameter = company.HasValue ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(int));
    
            var etypeParameter = etype != null ?
                new ObjectParameter("Etype", etype) :
                new ObjectParameter("Etype", typeof(string));
    
            var activeParameter = active != null ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(string));
    
            var departmentParameter = department.HasValue ?
                new ObjectParameter("Department", department) :
                new ObjectParameter("Department", typeof(int));
    
            var designationParameter = designation.HasValue ?
                new ObjectParameter("Designation", designation) :
                new ObjectParameter("Designation", typeof(int));
    
            var operationParameter = operation != null ?
                new ObjectParameter("Operation", operation) :
                new ObjectParameter("Operation", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_TAS_EmployeeMaster", machineCodeParameter, firstNameParameter, middleNameParameter, lastNameParameter, companyParameter, etypeParameter, activeParameter, departmentParameter, designationParameter, operationParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Sp_TAS_GetFilterItem(string filterText, string filterItem)
        {
            var filterTextParameter = filterText != null ?
                new ObjectParameter("FilterText", filterText) :
                new ObjectParameter("FilterText", typeof(string));
    
            var filterItemParameter = filterItem != null ?
                new ObjectParameter("FilterItem", filterItem) :
                new ObjectParameter("FilterItem", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Sp_TAS_GetFilterItem", filterTextParameter, filterItemParameter);
        }
    
        public virtual ObjectResult<Sp_TAS_ShiftDetails_Result> Sp_TAS_ShiftDetails(Nullable<int> machineCode, Nullable<int> shiftId, string operation)
        {
            var machineCodeParameter = machineCode.HasValue ?
                new ObjectParameter("MachineCode", machineCode) :
                new ObjectParameter("MachineCode", typeof(int));
    
            var shiftIdParameter = shiftId.HasValue ?
                new ObjectParameter("ShiftId", shiftId) :
                new ObjectParameter("ShiftId", typeof(int));
    
            var operationParameter = operation != null ?
                new ObjectParameter("Operation", operation) :
                new ObjectParameter("Operation", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_TAS_ShiftDetails_Result>("Sp_TAS_ShiftDetails", machineCodeParameter, shiftIdParameter, operationParameter);
        }
    
        public virtual ObjectResult<SP_TODAY_AbsentReport_Result> SP_TODAY_AbsentReport(string vDate)
        {
            var vDateParameter = vDate != null ?
                new ObjectParameter("vDate", vDate) :
                new ObjectParameter("vDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_TODAY_AbsentReport_Result>("SP_TODAY_AbsentReport", vDateParameter);
        }
    
        public virtual ObjectResult<SP_TODAY_PresentAbsentReport_Result> SP_TODAY_PresentAbsentReport(string dateFrom, string dateTo)
        {
            var dateFromParameter = dateFrom != null ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(string));
    
            var dateToParameter = dateTo != null ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_TODAY_PresentAbsentReport_Result>("SP_TODAY_PresentAbsentReport", dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_viewperson(Nullable<System.DateTime> fromDate, string staffid)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var staffidParameter = staffid != null ?
                new ObjectParameter("Staffid", staffid) :
                new ObjectParameter("Staffid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_viewperson", fromDateParameter, staffidParameter);
        }
    
        public virtual int SP_WEEKENDCONSOLIDATED(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_WEEKENDCONSOLIDATED", fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<SP_WEEKENDCONSOLIDATED_CROSSTAB_Result> SP_WEEKENDCONSOLIDATED_CROSSTAB(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_WEEKENDCONSOLIDATED_CROSSTAB_Result>("SP_WEEKENDCONSOLIDATED_CROSSTAB", fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<SP_WEEKENDCONSOLIDATED_CROSSTAB_BeforeApp_Result> SP_WEEKENDCONSOLIDATED_CROSSTAB_BeforeApp(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_WEEKENDCONSOLIDATED_CROSSTAB_BeforeApp_Result>("SP_WEEKENDCONSOLIDATED_CROSSTAB_BeforeApp", fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<SP_WEEKENDCONSOLIDATED_CROSSTAB_NEW_Result> SP_WEEKENDCONSOLIDATED_CROSSTAB_NEW(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_WEEKENDCONSOLIDATED_CROSSTAB_NEW_Result>("SP_WEEKENDCONSOLIDATED_CROSSTAB_NEW", fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<SP_WEEKENDCONSOLIDATED_CROSSTAB_NEW_Excel_Result> SP_WEEKENDCONSOLIDATED_CROSSTAB_NEW_Excel(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_WEEKENDCONSOLIDATED_CROSSTAB_NEW_Excel_Result>("SP_WEEKENDCONSOLIDATED_CROSSTAB_NEW_Excel", fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<SP_WEEKENDCONSOLIDATED_DELETEDDTL_Result> SP_WEEKENDCONSOLIDATED_DELETEDDTL(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_WEEKENDCONSOLIDATED_DELETEDDTL_Result>("SP_WEEKENDCONSOLIDATED_DELETEDDTL", fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<SP_WEEKENDCONSOLIDATED_INSERTEDAFTERAPPROVALDTL_Result> SP_WEEKENDCONSOLIDATED_INSERTEDAFTERAPPROVALDTL(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_WEEKENDCONSOLIDATED_INSERTEDAFTERAPPROVALDTL_Result>("SP_WEEKENDCONSOLIDATED_INSERTEDAFTERAPPROVALDTL", fromDateParameter, toDateParameter);
        }
    
        public virtual int SP_WeekEndDuty_Date(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string hOD)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var hODParameter = hOD != null ?
                new ObjectParameter("HOD", hOD) :
                new ObjectParameter("HOD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_WeekEndDuty_Date", fromDateParameter, toDateParameter, hODParameter);
        }
    
        public virtual int SP_WEEKENDPAYMENT_DTL(Nullable<int> personId, string mONTHID, Nullable<int> yearID)
        {
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("PersonId", personId) :
                new ObjectParameter("PersonId", typeof(int));
    
            var mONTHIDParameter = mONTHID != null ?
                new ObjectParameter("MONTHID", mONTHID) :
                new ObjectParameter("MONTHID", typeof(string));
    
            var yearIDParameter = yearID.HasValue ?
                new ObjectParameter("YearID", yearID) :
                new ObjectParameter("YearID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_WEEKENDPAYMENT_DTL", personIdParameter, mONTHIDParameter, yearIDParameter);
        }
    
        public virtual int SP_WEEKENDPAYMENT_DTL_BKP(Nullable<int> personId, string mONTHID, Nullable<int> yearID)
        {
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("PersonId", personId) :
                new ObjectParameter("PersonId", typeof(int));
    
            var mONTHIDParameter = mONTHID != null ?
                new ObjectParameter("MONTHID", mONTHID) :
                new ObjectParameter("MONTHID", typeof(string));
    
            var yearIDParameter = yearID.HasValue ?
                new ObjectParameter("YearID", yearID) :
                new ObjectParameter("YearID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_WEEKENDPAYMENT_DTL_BKP", personIdParameter, mONTHIDParameter, yearIDParameter);
        }
    
        public virtual ObjectResult<SP_WEEKENDPAYMENT_DTL_updated_Result> SP_WEEKENDPAYMENT_DTL_updated(Nullable<int> personId, string mONTHID, Nullable<int> yearID)
        {
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("PersonId", personId) :
                new ObjectParameter("PersonId", typeof(int));
    
            var mONTHIDParameter = mONTHID != null ?
                new ObjectParameter("MONTHID", mONTHID) :
                new ObjectParameter("MONTHID", typeof(string));
    
            var yearIDParameter = yearID.HasValue ?
                new ObjectParameter("YearID", yearID) :
                new ObjectParameter("YearID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_WEEKENDPAYMENT_DTL_updated_Result>("SP_WEEKENDPAYMENT_DTL_updated", personIdParameter, mONTHIDParameter, yearIDParameter);
        }
    
        public virtual ObjectResult<SP_WEEKENDPAYMENTSUMMARY_Result> SP_WEEKENDPAYMENTSUMMARY(Nullable<int> aYEAR_ID, Nullable<int> mONTH)
        {
            var aYEAR_IDParameter = aYEAR_ID.HasValue ?
                new ObjectParameter("AYEAR_ID", aYEAR_ID) :
                new ObjectParameter("AYEAR_ID", typeof(int));
    
            var mONTHParameter = mONTH.HasValue ?
                new ObjectParameter("MONTH", mONTH) :
                new ObjectParameter("MONTH", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_WEEKENDPAYMENTSUMMARY_Result>("SP_WEEKENDPAYMENTSUMMARY", aYEAR_IDParameter, mONTHParameter);
        }
    
        public virtual ObjectResult<sp_WeekendSchedule_Result> sp_WeekendSchedule()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_WeekendSchedule_Result>("sp_WeekendSchedule");
        }
    
        public virtual int SP_WEEKENDSCHEDULE_DEPTWISE(string fromDate, string toDate, Nullable<int> departmentID, string semid)
        {
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var departmentIDParameter = departmentID.HasValue ?
                new ObjectParameter("DepartmentID", departmentID) :
                new ObjectParameter("DepartmentID", typeof(int));
    
            var semidParameter = semid != null ?
                new ObjectParameter("semid", semid) :
                new ObjectParameter("semid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_WEEKENDSCHEDULE_DEPTWISE", fromDateParameter, toDateParameter, departmentIDParameter, semidParameter);
        }
    
        public virtual ObjectResult<SP_WeeklyWorkHours_Result> SP_WeeklyWorkHours(Nullable<int> empNumber, string month, string year, string type)
        {
            var empNumberParameter = empNumber.HasValue ?
                new ObjectParameter("EmpNumber", empNumber) :
                new ObjectParameter("EmpNumber", typeof(int));
    
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_WeeklyWorkHours_Result>("SP_WeeklyWorkHours", empNumberParameter, monthParameter, yearParameter, typeParameter);
        }
    
        public virtual ObjectResult<SP_WeeklyWorkHours_sunita_Result> SP_WeeklyWorkHours_sunita(Nullable<int> type1, string month, string year, string type)
        {
            var type1Parameter = type1.HasValue ?
                new ObjectParameter("type1", type1) :
                new ObjectParameter("type1", typeof(int));
    
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_WeeklyWorkHours_sunita_Result>("SP_WeeklyWorkHours_sunita", type1Parameter, monthParameter, yearParameter, typeParameter);
        }
    
        public virtual int SP_WeeklyWorkHours_sunita_test(Nullable<int> type1, string month, string year, string type)
        {
            var type1Parameter = type1.HasValue ?
                new ObjectParameter("type1", type1) :
                new ObjectParameter("type1", typeof(int));
    
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_WeeklyWorkHours_sunita_test", type1Parameter, monthParameter, yearParameter, typeParameter);
        }
    
        public virtual ObjectResult<SP_WeeklyWorkHours_sunitaweekday_Result> SP_WeeklyWorkHours_sunitaweekday(Nullable<int> type1, string month, string year)
        {
            var type1Parameter = type1.HasValue ?
                new ObjectParameter("type1", type1) :
                new ObjectParameter("type1", typeof(int));
    
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_WeeklyWorkHours_sunitaweekday_Result>("SP_WeeklyWorkHours_sunitaweekday", type1Parameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<SP_WeeklyWorkHours_sunitaweekday_SemesterBreak_Result> SP_WeeklyWorkHours_sunitaweekday_SemesterBreak(Nullable<int> type1, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate)
        {
            var type1Parameter = type1.HasValue ?
                new ObjectParameter("type1", type1) :
                new ObjectParameter("type1", typeof(int));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_WeeklyWorkHours_sunitaweekday_SemesterBreak_Result>("SP_WeeklyWorkHours_sunitaweekday_SemesterBreak", type1Parameter, fromdateParameter, todateParameter);
        }
    
        public virtual ObjectResult<SP_WeeklyWorkHours_sunitaweekend_Result> SP_WeeklyWorkHours_sunitaweekend(Nullable<int> type1, string month, string year)
        {
            var type1Parameter = type1.HasValue ?
                new ObjectParameter("type1", type1) :
                new ObjectParameter("type1", typeof(int));
    
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_WeeklyWorkHours_sunitaweekend_Result>("SP_WeeklyWorkHours_sunitaweekend", type1Parameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<SP_WeeklyWorkHours_sunitaweekendmeena_Result> SP_WeeklyWorkHours_sunitaweekendmeena(Nullable<int> type1, string month, string year)
        {
            var type1Parameter = type1.HasValue ?
                new ObjectParameter("type1", type1) :
                new ObjectParameter("type1", typeof(int));
    
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_WeeklyWorkHours_sunitaweekendmeena_Result>("SP_WeeklyWorkHours_sunitaweekendmeena", type1Parameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<SP_WeeklyWorkHours001_Result> SP_WeeklyWorkHours001(Nullable<int> empNumber, string month, string year)
        {
            var empNumberParameter = empNumber.HasValue ?
                new ObjectParameter("EmpNumber", empNumber) :
                new ObjectParameter("EmpNumber", typeof(int));
    
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_WeeklyWorkHours001_Result>("SP_WeeklyWorkHours001", empNumberParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<SP_WeeklyWorkHours002_Result> SP_WeeklyWorkHours002(Nullable<int> empNumber, string month, string year)
        {
            var empNumberParameter = empNumber.HasValue ?
                new ObjectParameter("EmpNumber", empNumber) :
                new ObjectParameter("EmpNumber", typeof(int));
    
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_WeeklyWorkHours002_Result>("SP_WeeklyWorkHours002", empNumberParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<SP_WeeklyWorkHours003_Result> SP_WeeklyWorkHours003(Nullable<int> empNumber, string month, string year, string type)
        {
            var empNumberParameter = empNumber.HasValue ?
                new ObjectParameter("EmpNumber", empNumber) :
                new ObjectParameter("EmpNumber", typeof(int));
    
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_WeeklyWorkHours003_Result>("SP_WeeklyWorkHours003", empNumberParameter, monthParameter, yearParameter, typeParameter);
        }
    
        public virtual ObjectResult<SP_WeeklyWorkHoursConsolidated_Result> SP_WeeklyWorkHoursConsolidated(string month, string year, string type)
        {
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_WeeklyWorkHoursConsolidated_Result>("SP_WeeklyWorkHoursConsolidated", monthParameter, yearParameter, typeParameter);
        }
    
        public virtual ObjectResult<SP_WeeklyWorkHoursConsolidated_Formated_Result> SP_WeeklyWorkHoursConsolidated_Formated(string month, string year, string type)
        {
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_WeeklyWorkHoursConsolidated_Formated_Result>("SP_WeeklyWorkHoursConsolidated_Formated", monthParameter, yearParameter, typeParameter);
        }
    
        public virtual ObjectResult<SP_WeeklyWorkHoursConsolidated_Formated_BackUp_Result> SP_WeeklyWorkHoursConsolidated_Formated_BackUp(string month, string year, string type)
        {
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_WeeklyWorkHoursConsolidated_Formated_BackUp_Result>("SP_WeeklyWorkHoursConsolidated_Formated_BackUp", monthParameter, yearParameter, typeParameter);
        }
    
        public virtual ObjectResult<SP_WeeklyWorkHoursConsolidated_Formated_Consolidated_Result> SP_WeeklyWorkHoursConsolidated_Formated_Consolidated(string month, string year, string type)
        {
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_WeeklyWorkHoursConsolidated_Formated_Consolidated_Result>("SP_WeeklyWorkHoursConsolidated_Formated_Consolidated", monthParameter, yearParameter, typeParameter);
        }
    
        public virtual ObjectResult<SP_WeeklyWorkHoursConsolidated_TEST_Result> SP_WeeklyWorkHoursConsolidated_TEST(string month, string year, string type)
        {
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_WeeklyWorkHoursConsolidated_TEST_Result>("SP_WeeklyWorkHoursConsolidated_TEST", monthParameter, yearParameter, typeParameter);
        }
    
        public virtual ObjectResult<SP_WeeklyWorkHoursConsolidated_WeekOnly_Result> SP_WeeklyWorkHoursConsolidated_WeekOnly(string month, string year, string type, string weekName)
        {
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var weekNameParameter = weekName != null ?
                new ObjectParameter("WeekName", weekName) :
                new ObjectParameter("WeekName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_WeeklyWorkHoursConsolidated_WeekOnly_Result>("SP_WeeklyWorkHoursConsolidated_WeekOnly", monthParameter, yearParameter, typeParameter, weekNameParameter);
        }
    
        public virtual ObjectResult<SP_WeeklyWorkHoursConsolidatedOffDays_Result> SP_WeeklyWorkHoursConsolidatedOffDays(string month, string year, string type)
        {
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_WeeklyWorkHoursConsolidatedOffDays_Result>("SP_WeeklyWorkHoursConsolidatedOffDays", monthParameter, yearParameter, typeParameter);
        }
    
        public virtual ObjectResult<SP_WeeklyWorkHoursConsolidatedOffDays001_Result> SP_WeeklyWorkHoursConsolidatedOffDays001(string month, string year, string type)
        {
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_WeeklyWorkHoursConsolidatedOffDays001_Result>("SP_WeeklyWorkHoursConsolidatedOffDays001", monthParameter, yearParameter, typeParameter);
        }
    
        public virtual int SP_WeeklyWorkHoursConsolidatedOffDaysweekwise(string month, string year, string type, string weekname)
        {
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var weeknameParameter = weekname != null ?
                new ObjectParameter("weekname", weekname) :
                new ObjectParameter("weekname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_WeeklyWorkHoursConsolidatedOffDaysweekwise", monthParameter, yearParameter, typeParameter, weeknameParameter);
        }
    
        public virtual ObjectResult<SP_WeeklyWorkHoursConsolidatedWeekDays_Result> SP_WeeklyWorkHoursConsolidatedWeekDays(string month, string year, string type)
        {
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_WeeklyWorkHoursConsolidatedWeekDays_Result>("SP_WeeklyWorkHoursConsolidatedWeekDays", monthParameter, yearParameter, typeParameter);
        }
    
        public virtual ObjectResult<SP_WeeklyWorkHoursConsolidatedWeekDays001_Result> SP_WeeklyWorkHoursConsolidatedWeekDays001(string month, string year, string type)
        {
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_WeeklyWorkHoursConsolidatedWeekDays001_Result>("SP_WeeklyWorkHoursConsolidatedWeekDays001", monthParameter, yearParameter, typeParameter);
        }
    
        public virtual int SP_WeeklyWorkHoursConsolidatedWeekDaysweekwise(string month, string year, string type, string weekname)
        {
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var weeknameParameter = weekname != null ?
                new ObjectParameter("weekname", weekname) :
                new ObjectParameter("weekname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_WeeklyWorkHoursConsolidatedWeekDaysweekwise", monthParameter, yearParameter, typeParameter, weeknameParameter);
        }
    
        public virtual int SP_WeeklyWorkHoursConsolidatedweekwise(string month, string year, string type, string weekname)
        {
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var weeknameParameter = weekname != null ?
                new ObjectParameter("weekname", weekname) :
                new ObjectParameter("weekname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_WeeklyWorkHoursConsolidatedweekwise", monthParameter, yearParameter, typeParameter, weeknameParameter);
        }
    
        public virtual int SP_WeeklyWorkHoursConsolidatedweekwise001(string month, string year, string type, string weekname)
        {
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var weeknameParameter = weekname != null ?
                new ObjectParameter("weekname", weekname) :
                new ObjectParameter("weekname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_WeeklyWorkHoursConsolidatedweekwise001", monthParameter, yearParameter, typeParameter, weeknameParameter);
        }
    
        public virtual ObjectResult<SP_WORKLOGDTL_Result> SP_WORKLOGDTL(Nullable<int> empNumber, string month, string year, string type)
        {
            var empNumberParameter = empNumber.HasValue ?
                new ObjectParameter("EmpNumber", empNumber) :
                new ObjectParameter("EmpNumber", typeof(int));
    
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_WORKLOGDTL_Result>("SP_WORKLOGDTL", empNumberParameter, monthParameter, yearParameter, typeParameter);
        }
    
        public virtual ObjectResult<SP_WORKLOGDTL001_Result> SP_WORKLOGDTL001(Nullable<int> empNumber, string month, string year)
        {
            var empNumberParameter = empNumber.HasValue ?
                new ObjectParameter("EmpNumber", empNumber) :
                new ObjectParameter("EmpNumber", typeof(int));
    
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_WORKLOGDTL001_Result>("SP_WORKLOGDTL001", empNumberParameter, monthParameter, yearParameter);
        }
    
        public virtual int TAS_SP_LateAttendance_Load(Nullable<System.DateTime> fromDate1, Nullable<System.DateTime> toDate1)
        {
            var fromDate1Parameter = fromDate1.HasValue ?
                new ObjectParameter("FromDate1", fromDate1) :
                new ObjectParameter("FromDate1", typeof(System.DateTime));
    
            var toDate1Parameter = toDate1.HasValue ?
                new ObjectParameter("ToDate1", toDate1) :
                new ObjectParameter("ToDate1", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TAS_SP_LateAttendance_Load", fromDate1Parameter, toDate1Parameter);
        }
    
        public virtual ObjectResult<TAS_SP_LateAttendance_Log_Result> TAS_SP_LateAttendance_Log(Nullable<System.DateTime> mDate)
        {
            var mDateParameter = mDate.HasValue ?
                new ObjectParameter("MDate", mDate) :
                new ObjectParameter("MDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TAS_SP_LateAttendance_Log_Result>("TAS_SP_LateAttendance_Log", mDateParameter);
        }
    
        public virtual int TAS_SP_LateAttendanceRecords(Nullable<System.DateTime> date, string empRecords, string createdBy, string createdIP, string shift)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var empRecordsParameter = empRecords != null ?
                new ObjectParameter("EmpRecords", empRecords) :
                new ObjectParameter("EmpRecords", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var createdIPParameter = createdIP != null ?
                new ObjectParameter("CreatedIP", createdIP) :
                new ObjectParameter("CreatedIP", typeof(string));
    
            var shiftParameter = shift != null ?
                new ObjectParameter("Shift", shift) :
                new ObjectParameter("Shift", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TAS_SP_LateAttendanceRecords", dateParameter, empRecordsParameter, createdByParameter, createdIPParameter, shiftParameter);
        }
    
        public virtual ObjectResult<TAS_SP_TODAYLATEATTENDANCE_Result> TAS_SP_TODAYLATEATTENDANCE(string date)
        {
            var dateParameter = date != null ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TAS_SP_TODAYLATEATTENDANCE_Result>("TAS_SP_TODAYLATEATTENDANCE", dateParameter);
        }
    }
}
