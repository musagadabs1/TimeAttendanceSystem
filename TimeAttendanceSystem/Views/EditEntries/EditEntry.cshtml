@model TimeAttendanceSystem.Models.EditEntry

@{
    ViewBag.Title = "Create";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="alert-heading">
        <h2 style="text-align:center; color:#0094ff">Correct Duplicate Entries</h2>
    </div>
    <div class="row">
        <div class="col-md-4">
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.ErrorDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ErrorDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ErrorDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DeptId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.DeptId, (SelectList)ViewBag.Departments, "Select All", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.DeptId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <button type="button" class="btn btn-primary" id="btnError">Show</button>
                    </div>
                </div>

                <div class="form-group">
                    <table id="location" class="table table-bordered table-condensed table-responsive" style="width: 100%;max-height: 125px; margin:5px; overflow-y: scroll; display:none">
                        <tr>

                            <th>
                                NAME
                            </th>
                            <th>
                                COUNT
                            </th>
                            <th>
                                EDIT
                            </th>
                        </tr>
                    </table>
                </div>
            </div>
        </div>
        <div class="col-md-8">
            <div class="form-horizontal">
                <div class="form-group">
                    @Html.LabelFor(model => model.EmployeeID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.EmployeeID, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EmployeeID, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.TerminalID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.DropDownListFor(model => model.TerminalID, (SelectList)ViewBag.Terminals, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TerminalID, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.Mode, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.DropDownListFor(model => model.Mode, new SelectList(ViewBag.Mode, "Value", "Text"), htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Mode, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TimeHH, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.DropDownListFor(model => model.TimeHH, new SelectList(ViewBag.TimeHH, "Value", "Text"), htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TimeHH, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.TimeMM, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.DropDownListFor(model => model.TimeMM, new SelectList(ViewBag.TimeMM, "Value", "Text"), htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TimeMM, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @*<div class="form-group">*@
                    @Html.LabelFor(model => model.Remark, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.Remark, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
                    </div>
                    @*</div>*@
                    @Html.LabelFor(model => model.SendMail, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.SendMail)
                            @Html.ValidationMessageFor(model => model.SendMail, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-1">
                        <input type="button" id="btnAdd" value="Add" class="btn btn-primary" />
                    </div>
                    <div class="col-md-2">
                        <input type="button" id="btnDelete" value="Delete" class="btn btn-primary" />
                    </div>
                    <div class="col-md-0">
                        <input type="button" id="btnRecompile" value="Recompile" class="btn btn-primary" />
                    </div>
                </div>
                <div class="table-responsive">
                    <div class="form-group">
                        <table id="Details" class="table table-striped table-bordered"
                               style="width: 100%; margin:5px; max-height: 250px; overflow-y: scroll;">
                            <tr>
                                <th>
                                    EMPID
                                </th>
                                <th>
                                    TERMINAL
                                </th>
                                <th>
                                    NAME
                                </th>
                                <th>
                                    TIME
                                </th>
                                <th>
                                    MODE
                                </th>
                                <th>
                                    STATUS
                                </th>
                                <th>
                                    DETAILS
                                </th>
                            </tr>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
    @*<div id="loading" style="position: absolute; display: none; opacity: 0.5; width: 100%;
            padding-left: 10%; background-color: Black">
            <img src="~/Images/loader-2.gif" />
        </div>*@
}
<script src="~/Scripts/CustomScripts/PunchError.js"></script>
<script src="~/Scripts/jquery-3.3.1.js"></script>

<script type="text/javascript">
    $('#btnError').click(function () {

        if ($("#ErrorDate").val() == "") {
            alert("Please Enter the date to Show the Data");
            return false;
        }
        else {
            var deptId = $('#Department').val();
            var date = $("#ErrorDate").val()

            LoadGrid('@Url.Action("LoadError", "EditEntries")' + '?deptId=' + deptId + '&date=' + date, "Name,Count", "Update", "EMPID", "Editbuttons", "", "", "", "#location");
        }
    });

    //Save record to Manual Entry Sp
    $("#btnAdd").click(function () {
        if ($('#EmployeeID').val() == "") {
            alert("Employee Id Cannot be Empty");
            return false;
        }
        else if ($('#Name').val() == "") {
            alert("Name Cannot be Empty");
            return false;
        }
        else if ($('#Mode').val() == "" || $('#Mode').val() == null) {
            alert("Mode Cannot be Empty");
            return false;
        }
        else if ($('#TerminalID').val() == "" || $('#TerminalID').val() == null) {
            alert("Terminal Cannot be Empty");
            return false;
        }
        else if ($('#Date').val() == "" || $('#Date').val() == null) {
            alert("Date Cannot be Empty");
            return false;
        }

        var SendMailOption = "";
        if ($('#SendMail').is(":checked")) {
            SendMailOption = "Yes";
        }
        else {
            SendMailOption = "No";
        }
        var date = $('#Date').val();
        var timeHH = $('#TimeHH').val();
        var timeMM = $('#TimeMM').val();
        var terminalID = $('#TerminalID').val();
        var employeeID = $('#EmployeeID').val();
        var mode = $('#Mode').val();
        var remark = $('#Remark').val();
        var sendMail = $('#SendMail').val();
        var name = $('#Name').val();
        var operation = "INSERT";

        SaveData('@Url.Action("SaveEntries", "EditEntries")', date, timeHH, timeMM, terminalID, employeeID,name, mode,remark, sendMail,operation);

        LoadGrid('@Url.Action("LoadErrorDetails")', "EMPID,Terminal,Name,Time,Mode,Status", "Update", "EMPID", "EditErrorDetails", "", "", "", date, 0, employeeID, "#Details");
    });

    // Delete Entry
    $("#btnDelete").click(function () {

        var date = $('#Date').val();
        var timeHH = $('#TimeHH').val();
        var timeMM = $('#TimeMM').val();
        var terminalID = $('#TerminalID').val();
        var employeeID = $('#EmployeeID').val();
        var mode = $('#Mode').val();
        var name = $('#Name').val();
        var remark = $('#Remark').val();
        var sendMail = $('#SendMail').val();
        var operation = "DELETE";
        var errorDate = $('#ErrorDate').val();

        var SendMailOption = "";
        if ($('#SendMail').is(":checked")) {
            SendMailOption = "Yes";
        }
        else {
            SendMailOption = "No";
        }
        SaveData('@Url.Action("SaveEntries", "EditEntries")', date, timeHH, timeMM, terminalID, employeeID,name, mode, remark, sendMail, operation);
        LoadGrid('@Url.Action("LoadErrorDetails", "EditEntries")' + '?date=' + errorDate + '&name=' + name, "EMPID,Terminal,Name,Time,Mode,Status", "Update", "EMPID", "EditErrorDetails", "", "", "","#Details");
    });

    $("#btnRecompile").click(function () {
        var date = $('#Date').val();
        Recompile('@Url.Action("RecompileForDate", "EditEntries")',date);

    });

    $(document).on('click', ".Editbuttons", function (event) {
        //------------------------------------------ Before filling clear the Data-----------------------------
        var errorDate = $('#ErrorDate').val();

        var cells = $(this).closest("tr").children("td");
        var name = cells.eq(0).text();
        $('#Name').val("");
        $('#Mode').val(0);
        $('#TerminalID').val(0);
        var date = $('#Date').val("");

       //------------------------------------------ To Load the Next Grid-----------------------------
        LoadGrid('@Url.Action("LoadErrorDetails", "EditEntries")' + '?date=' + errorDate + '&name=' + name, "EMPID,Terminal,Name,Time,Mode,Status", "Update", "EMPID", "EditErrorDetails", "", "", "","#Details");
    });

    //----------------------------------- Populate the Data from table Button click-----------------------------
    $(document).on('click', ".EditErrorDetails", function (event) {

        var cells = $(this).closest("tr").children("td");
        var cell1 = cells.eq(0).text();
        var cell2 = cells.eq(1).text();
        var cell3 = cells.eq(2).text();
        var cell4 = cells.eq(3).text();
        var cell5 = cells.eq(4).text();

        var HR = cell4.substring(0, 2);
        var MIN = cell4.substring(2, 4);
        var MS = cell4.substring(4, 6);

        $('#EmployeeID').val(cell1);
        $('#Name').val(cell3);
        $('#Mode').val(cell5);
        $('#TerminalID').val(cell2);
        $('#TimeHH').val(HR);
        $('#TimeMM').val(MIN);
        $('#Date').val($('#ErrorDate').val());
    });
</script>




